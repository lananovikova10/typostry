/**
 * Emoji mapping for the markdown editor
 * 
 * Maps emoji shortcodes to their corresponding Unicode emoji characters
 */

// Map of emoji codes to their Unicode equivalent
export const emojiMap: Record<string, string> = {
  // Face emoticons
  "smile": "😄",
  "smiley": "😃",
  "grin": "😁",
  "laughing": "😆",
  "joy": "😂",
  "rofl": "🤣",
  "relaxed": "☺️",
  "blush": "😊",
  "innocent": "😇",
  "wink": "😉",
  "heart_eyes": "😍",
  "thinking": "🤔",
  "frowning": "😦",
  "worried": "😟",
  "cry": "😢",
  "sob": "😭",
  "sleeping": "😴",
  "sunglasses": "😎",
  "cool": "😎",
  "tired": "😫",
  "angry": "😠",
  "rage": "😡",
  "triumph": "😤",
  "smirk": "😏",
  "yum": "😋",
  "pensive": "😔",
  "confused": "😕",
  "upside_down": "🙃",
  "flushed": "😳",
  "crazy": "🤪",
  "zany": "🤪",
  "nerd": "🤓",
  "no_mouth": "😶",
  "neutral": "😐",
  "expressionless": "😑",
  "shushing": "🤫",
  "mask": "😷",
  "sick": "🤒",
  "vomiting": "🤮",
  "sneezing": "🤧",
  
  // Heart symbols
  "heart": "❤️",
  "orange_heart": "🧡",
  "yellow_heart": "💛",
  "green_heart": "💚",
  "blue_heart": "💙",
  "purple_heart": "💜",
  "black_heart": "🖤",
  "broken_heart": "💔",
  "sparkling_heart": "💖",
  "two_hearts": "💕",
  "revolving_hearts": "💞",
  "heartbeat": "💓",
  "growing_heart": "💗",
  "heartpulse": "💗",
  
  // Hand symbols
  "thumbsup": "👍",
  "+1": "👍",
  "thumbsdown": "👎",
  "-1": "👎",
  "clap": "👏",
  "raised_hands": "🙌",
  "pray": "🙏",
  "handshake": "🤝",
  "ok_hand": "👌",
  "v": "✌️",
  "peace": "✌️",
  "crossed_fingers": "🤞",
  "fist": "✊",
  "punch": "👊",
  "wave": "👋",
  "muscle": "💪",
  "point_up": "☝️",
  "point_down": "👇",
  "point_left": "👈",
  "point_right": "👉",
  
  // Animal emojis
  "dog": "🐶",
  "cat": "🐱",
  "mouse": "🐭",
  "hamster": "🐹",
  "rabbit": "🐰",
  "fox": "🦊",
  "bear": "🐻",
  "panda": "🐼",
  "koala": "🐨",
  "tiger": "🐯",
  "lion": "🦁",
  "cow": "🐮",
  "pig": "🐷",
  "frog": "🐸",
  "monkey": "🐵",
  "chicken": "🐔",
  "penguin": "🐧",
  "bird": "🐦",
  "duck": "🦆",
  "eagle": "🦅",
  "owl": "🦉",
  "bat": "🦇",
  "wolf": "🐺",
  "unicorn": "🦄",
  "bee": "🐝",
  "butterfly": "🦋",
  "snail": "🐌",
  "snake": "🐍",
  "turtle": "🐢",
  "fish": "🐟",
  "whale": "🐳",
  "octopus": "🐙",
  
  // Food emojis
  "pizza": "🍕",
  "burger": "🍔",
  "hotdog": "🌭",
  "taco": "🌮",
  "burrito": "🌯",
  "sushi": "🍣",
  "bento": "🍱",
  "ramen": "🍜",
  "curry": "🍛",
  "rice": "🍚",
  "sandwich": "🥪",
  "bread": "🍞",
  "fries": "🍟",
  "popcorn": "🍿",
  "donut": "🍩",
  "cake": "🍰",
  "cookie": "🍪",
  "chocolate": "🍫",
  "icecream": "🍦",
  "lollipop": "🍭",
  "apple": "🍎",
  "banana": "🍌",
  "strawberry": "🍓",
  "orange": "🍊",
  "watermelon": "🍉",
  "grapes": "🍇",
  "pineapple": "🍍",
  "coffee": "☕",
  "beer": "🍺",
  "wine": "🍷",
  "cocktail": "🍸",
  "tea": "🍵",
  
  // Nature emojis
  "sun": "☀️",
  "moon": "🌙",
  "cloud": "☁️",
  "umbrella": "☂️",
  "rainbow": "🌈",
  "star": "⭐",
  "fire": "🔥",
  "droplet": "💧",
  "ocean": "🌊",
  "snowflake": "❄️",
  "snow": "❄️",
  "earth": "🌎",
  "globe": "🌎",
  "mountain": "⛰️",
  "volcano": "🌋",
  "tree": "🌲",
  "evergreen": "🌲",
  "palm_tree": "🌴",
  "flower": "🌸",
  "rose": "🌹",
  "hibiscus": "🌺",
  "sunflower": "🌻",
  "leaf": "🍃",
  "fallen_leaf": "🍂",
  
  // Activity emojis
  "soccer": "⚽",
  "basketball": "🏀",
  "football": "🏈",
  "baseball": "⚾",
  "tennis": "🎾",
  "volleyball": "🏐",
  "golf": "⛳",
  "trophy": "🏆",
  "medal": "🏅",
  "running": "🏃",
  "swimming": "🏊",
  "dancer": "💃",
  "dj": "🎧",
  "microphone": "🎤",
  "headphones": "🎧",
  "guitar": "🎸",
  "drum": "🥁",
  "dice": "🎲",
  "chess": "♟️",
  "dart": "🎯",
  "bowling": "🎳",
  
  // Travel and places
  "car": "🚗",
  "taxi": "🚕",
  "bus": "🚌",
  "truck": "🚚",
  "bicycle": "🚲",
  "train": "🚆",
  "airplane": "✈️",
  "helicopter": "🚁",
  "rocket": "🚀",
  "ship": "🚢",
  "boat": "⛵",
  "anchor": "⚓",
  "house": "🏠",
  "building": "🏢",
  "hotel": "🏨",
  "hospital": "🏥",
  "bank": "🏦",
  "school": "🏫",
  "castle": "🏰",
  "tokyo_tower": "🗼",
  "statue_of_liberty": "🗽",
  "bridge": "🌉",
  "tent": "⛺",
  "fuelpump": "⛽",
  "traffic_light": "🚦",
  
  // Objects and symbols
  "watch": "⌚",
  "iphone": "📱",
  "phone": "📱",
  "computer": "💻",
  "laptop": "💻",
  "keyboard": "⌨️",
  "printer": "🖨️",
  "camera": "📷",
  "tv": "📺",
  "radio": "📻",
  "speaker": "🔈",
  "bell": "🔔",
  "lock": "🔒",
  "key": "🔑",
  "bulb": "💡",
  "book": "📚",
  "books": "📚",
  "notebook": "📓",
  "pen": "🖊️",
  "pencil": "✏️",
  "paperclip": "📎",
  "scissors": "✂️",
  "envelope": "✉️",
  "email": "✉️",
  "mailbox": "📫",
  "package": "📦",
  "shopping_bag": "🛍️",
  "moneybag": "💰",
  "money": "💰",
  "credit_card": "💳",
  "gem": "💎",
  "hammer": "🔨",
  "wrench": "🔧",
  "gear": "⚙️",
  "clock": "🕐",
  "hourglass": "⌛",
  "bomb": "💣",
  "pill": "💊",
  "syringe": "💉",
  "gift": "🎁",
  "birthday": "🎂",
  "balloon": "🎈",
  "ribbon": "🎀",
  "calendar": "📅",
  "memo": "📝",
  "note": "📝",
  "microscope": "🔬",
  "telescope": "🔭",
  "magnet": "🧲",
  
  // Special symbols
  "check": "✅",
  "x": "❌",
  "question": "❓",
  "exclamation": "❗",
  "warning": "⚠️",
  "recycle": "♻️",
  "arrow_up": "⬆️",
  "arrow_down": "⬇️",
  "arrow_left": "⬅️",
  "arrow_right": "➡️",
  "back": "🔙",
  "soon": "🔜",
  "top": "🔝",
  "copyright": "©️",
  "registered": "®️",
  "trademark": "™️",
  "1234": "🔢",
  "hash": "#️⃣",
  "zero": "0️⃣",
  "one": "1️⃣",
  "two": "2️⃣",
  "three": "3️⃣",
  "four": "4️⃣",
  "five": "5️⃣",
  "six": "6️⃣",
  "seven": "7️⃣",
  "eight": "8️⃣",
  "nine": "9️⃣"
}

/**
 * Replace emoji shortcodes in text with actual emoji characters
 * 
 * @param text The text containing emoji shortcodes like :smile: to be replaced
 * @returns The text with emoji shortcodes replaced with Unicode emoji characters
 */
export function replaceEmojis(text: string): string {
  // First handle the special case of consecutive emoji codes without spaces
  // This pattern matches any sequence like :emoji1::emoji2::emoji3:
  let processed = text;
  const consecutivePattern = /:([a-zA-Z0-9_+-]+):/g;
  let match;
  
  // We need to manually process consecutive emojis to handle them correctly
  while ((match = consecutivePattern.exec(processed)) !== null) {
    const fullMatch = match[0];
    const code = match[1];
    
    // Only replace if it's in our emoji map
    if (emojiMap[code]) {
      // Replace just this emoji code
      const before = processed.substring(0, match.index);
      const after = processed.substring(match.index + fullMatch.length);
      processed = before + emojiMap[code] + after;
      
      // Update the regex lastIndex since we modified the string
      consecutivePattern.lastIndex = match.index + emojiMap[code].length;
    } else {
      // If not found, just move past this match
      consecutivePattern.lastIndex = match.index + fullMatch.length;
    }
  }

  return processed;
}